@model List<BTL_LWNC_WebAmNhac.Models.PlaylistDetail>

@{
    ViewData["Title"] = "Playlists...";
    Layout = "_Playlists";
}
<div class="player">
    <!-- Dashboard -->
    <div class="dashboard">
        <!-- Header -->
        <header>
            <h4>Now playing:</h4>
            <h2>@Model.FirstOrDefault().Playlist.Name</h2>
        </header>

        <!-- CD -->
        <div class="cd">
            <div class="cd-thumb" style="background-image: url('@Model.FirstOrDefault().Playlist.Thumbnail')">
            </div>
        </div>

        <!-- Control -->
        <div class="control">
            <div class="btn btn-repeat">
                <i class="fas fa-redo"></i>
            </div>
            <div class="btn btn-prev">
                <i class="fas fa-step-backward"></i>
            </div>
            <div class="btn btn-toggle-play">
                <i class="fas fa-pause icon-pause"></i>
                <i class="fas fa-play icon-play"></i>
            </div>
            <div class="btn btn-next">
                <i class="fas fa-step-forward"></i>
            </div>
            <div class="btn btn-random">
                <i class="fas fa-random"></i>
            </div>
        </div>

        <input id="progress" class="progress" type="range" value="0" step="1" min="0" max="100">

        <audio id="audio" src=""></audio>
    </div>

    <!-- Playlist -->
    <div class="playlist">
    </div>
</div>

<script>
    const $ = document.querySelector.bind(document);
    const $$ = document.querySelectorAll.bind(document);
    var songs = [];
    
    @foreach (var item in Model)
    {
        @:songs.push({
        @:name: "@item.Song.Name",
        @:singer: "@item.Song.Artist.Name",
        @:path: "@item.Song.Url",
        @:image: "@item.Song.Thumbnail",
        @:});
    }

    const app = {
    render: function () {
            const htmls = songs.map(song => {
                return `<div class="song">
                <div class="thumb" style="background-image: url('${song.image}')">
                </div>
                <div class="songbody">
                    <h3 class="title">${song.name}</h3>
                    <p class="author">${song.singer}</p>
                </div>
                <div class="option">
                    <i class="fas fa-ellipsis-h"></i>
                </div>
            </div>`
            })
            $('.playlist').innerHTML = htmls.join('')
        },
        handleEvents: function () {
            cd = $('.cd')
            if (!cd) {
                return; // Exit the function if the ".cd" element is not found
            }

            const cdWidth = cd.offsetWidth;
            document.onscroll = function () {
                document.onscroll = function () {
                    const scrollTop = window.scrollY || document.documentElement.scrollTop
                    const newCdWidth = cdWidth - scrollTop

                    cd.style.width = newCdWidth > 0 ? newCdWidth + 'px' : 0
                    cd.style.opacity = newCdWidth / cdWidth

                }
            }
        },
        start: function () {
            this.handleEvents()
            this.render()
        }
    }
    app.start()
</script>